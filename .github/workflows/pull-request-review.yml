name: PR review

on:
  pull_request_review:
    types:
      - submitted
      - dismissed
      - edited

defaults:
  run:
    shell: bash

jobs:
  verify-approval:
    name: Count approved reviews
    runs-on: ubuntu-latest
    outputs:
      count-approved: ${{ steps.get-count-approved.outputs.result }}
      is-approved: ${{ steps.get-count-approved.outputs.result >= 2 }}
    steps:
      - name: Get count of approved reviews
        id: get-count-approved
        uses: actions/github-script@master
        with:
          github-token: ${{ secrets.GHA_TOKEN }}
          script: |
            const REVIEW_STATE = {
                dismissed: "DISMISSED",
                approved: "APPROVED",
            };

            function selectLatestPerUser(reviews) {
                const latestByUser = {};
                reviews.forEach(r => {
                    // the reviews are in chronological order (earliest to latest)
                    // so to get the latest for each user we can use an Object as a map and loop over all reviews
                    // at each iteration, a more recent review for that user will replace an earlier one set before it
                    latestByUser[r.user.login] = r;
                });
                return Object.values(latestByUser);
            }

            console.log(context);

            const {data: reviews} = await github.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
            });

            const latestReviews = selectLatestPerUser(reviews);
            console.log(latestReviews);
            const countApproved = latestReviews.filter(r => r.state === REVIEW_STATE.approved).length;
            console.log(`${countApproved} approving reviews`);

            return countApproved;

  integration-tests:
    name: Integration tests
    runs-on: ubuntu-latest
    needs: verify-approval
    if: needs.verify-approval.outputs.is-approved
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - name: Install IDAES and extensions
        run: |
          python -m pip install --progress-bar off --upgrade pip setuptools wheel
          python -m pip install --progress-bar off -r requirements-dev.txt
          idaes get-extensions --verbose
          echo "$(idaes bin-directory)" >> $GITHUB_PATH
      - name: Verify installation
        run: |
          idaes --version
          ipopt -v
      - name: Run integration tests
        run: |
          pytest -c pytest.ini -m integration idaes/
