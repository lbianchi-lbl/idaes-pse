name: Integration tests

on:
  # for the moment, this workflow needs to be triggered manually
  workflow_dispatch:
    inputs:
      git-ref:
        description: Git hash (optional)
        required: false
  repository_dispatch:
    # to run this, send a POST API call at repos/IDAES/idaes-pse/dispatches with the specified event_type
    # e.g. `gh repos/IDAES/idaes-pse/dispatches -F event_type=integration_tests_requested`
    types: [integration_tests_requested]
  schedule:
    # run daily at 5:00 am UTC (12 am ET/9 pm PT)
    - cron: '0 5 * * *'
  pull_request_review:
    types:
      - submitted
      - edited

defaults:
  run:
    shell: bash

jobs:
  check-trigger:
    name: Check 
    runs-on: ubuntu-latest
    outputs:
      scheduled: ${{ github.event_name == 'schedule' }}
      pr-approved: ${{ github.event_name == 'pull_request_review' && steps.get-count-approved.outputs.result >= 2 }}
    steps:
      - uses: actions/checkout@v2
      - name: Get count of approved reviews
        id: get-count-approved
        if: github.event_name == 'pull_request_review'
        uses: actions/github-script@master
        with:
          script: |
            const script = require(`${process.env.GITHUB_WORKSPACE}/.github/workflows/countApproved.js`);
            const countApproved = await script({
              github: github,
              owner: context.repo.owner,
              repo: context.repo.repo,
              pullNumber: context.payload.pull_request.number,
            });
            return countApproved;
  run-integration:
    needs: check-trigger
    if: needs.check-trigger.outputs.scheduled || needs.check-trigger.outputs.pr-approved
    name: Integration tests (py${{ matrix.python-version }}/${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      # if fail-fast == true (the default), jobs for the remaining values in the matrix are cancelled
      fail-fast: false
      matrix:
        python-version:
          - '3.6'
          - '3.7'
        os:
          - ubuntu-18.04
          - windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install idaes and dependencies
        run: |
          python -m pip install --progress-bar off --upgrade pip setuptools wheel
          python -m pip install --progress-bar off -r requirements-dev.txt
          idaes --version
      - name: Install extensions
        run: |
          idaes get-extensions --verbose
          find $(idaes data-directory) -ls
          # add bin directory to $PATH (only valid for subsequent steps)
          echo "$(idaes bin-directory)" >> $GITHUB_PATH
      - name: Test access to executables
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
              ipopt.exe -v
          else
              ipopt -v
          fi
      - name: Run idaes-pse integration tests
        run: |
          pytest -m integration idaes/
      - name: Fetch examples-pse
        run: |
          git clone https://github.com/IDAES/examples-pse.git
      - name: Run examples-pse tests
        run: |
          cd examples-pse
          pytest
